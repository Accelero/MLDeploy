# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import proto.ProcessLogConfiguration_pb2 as ProcessLogConfiguration__pb2
import proto.ProtoProcessLogEntryContainer_pb2 as ProtoProcessLogEntryContainer__pb2


class ProcessLogDataProviderStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.RequestProcessLogDataStream = channel.unary_stream(
                '/ProtoProcessLog.ProcessLogDataProvider/RequestProcessLogDataStream',
                request_serializer=ProcessLogConfiguration__pb2.ProcessLogConfiguration.SerializeToString,
                response_deserializer=ProtoProcessLogEntryContainer__pb2.ProtoProcessLogEntryContainer.FromString,
                )


class ProcessLogDataProviderServicer(object):
    """Missing associated documentation comment in .proto file."""

    def RequestProcessLogDataStream(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ProcessLogDataProviderServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'RequestProcessLogDataStream': grpc.unary_stream_rpc_method_handler(
                    servicer.RequestProcessLogDataStream,
                    request_deserializer=ProcessLogConfiguration__pb2.ProcessLogConfiguration.FromString,
                    response_serializer=ProtoProcessLogEntryContainer__pb2.ProtoProcessLogEntryContainer.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'ProtoProcessLog.ProcessLogDataProvider', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class ProcessLogDataProvider(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def RequestProcessLogDataStream(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/ProtoProcessLog.ProcessLogDataProvider/RequestProcessLogDataStream',
            ProcessLogConfiguration__pb2.ProcessLogConfiguration.SerializeToString,
            ProtoProcessLogEntryContainer__pb2.ProtoProcessLogEntryContainer.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
