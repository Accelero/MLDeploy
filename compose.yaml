networks:
  ml_net:
    driver: bridge

volumes:
  influx_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /c/docker-volumes/mldeploy/influx/data
  # influx_config:
  #   driver: local
  #   driver_opts:
  #     type: none
  #     o: bind
  #     device: /c/docker-volumes/mldeploy/influx/config
  # telegraf_config:
  #   driver: local
  #   driver_opts:
  #     type: none
  #     o: bind
  #     device: /c/docker-volumes/mldeploy/telegraf/config
  chronograf:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /c/docker-volumes/mldeploy/chronograf
  grafana:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /c/docker-volumes/mldeploy/grafana
  # mosquitto_config:
  #   driver: local
  #   driver_opts:
  #     type: none
  #     o: bind
  #     device: /c/docker-volumes/mldeploy/mosquitto/config
  mosquitto_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /c/docker-volumes/mldeploy/mosquitto/data
  mosquitto_log:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /c/docker-volumes/mldeploy/mosquitto/log
  rabbitmq_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /c/docker-volumes/mldeploy/rabbitmq/data
  # rabbitmq_config:
  #   driver: local
  #   driver_opts:
  #     type: none
  #     o: bind
  #     device: /c/docker-volumes/mldeploy/rabbitmq/config



services:
  influxdb:
    build: influxdb
    networks:
      - ml_net
    ports:
      - 8086:8086
    volumes:
      - influx_data:/var/lib/influxdb
      # - influx_config:/etc/influxdb
      - ./influxdb/influxdb.conf:/etc/influxdb/influxdb.conf # dev-opt

  telegraf:
    build: telegraf
    networks:
      - ml_net
    volumes:
      # - telegraf_config:/etc/telegraf
      - ./telegraf/telegraf.conf:/etc/telegraf/telegraf.conf # dev-opt
    depends_on:
      - influxdb
      - mosquitto
      - rabbitmq
    restart: on-failure

  mosquitto:
    build: mosquitto
    networks:
      - ml_net
    ports:
      - 1883:1883
    volumes:
      # - mosquitto_config:/mosquitto/config
      - ./mosquitto/mosquitto.conf:/mosquitto/config/mosquitto.conf # dev-opt
      - mosquitto_data:/mosquitto/data
      - mosquitto_log:/mosquitto/log

  rabbitmq: # long starting time
    build: rabbitmq
    networks:
      - ml_net
    ports:
      # AMQP protocol port
      - '5672:5672'
      # HTTP management UI
      - '15672:15672'
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq # clean /rabbitmq/data/mnesia?
      # - rabbitmq_config:/etc/rabbitmq
      - ./rabbitmq/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf # dev-opt

  chronograf:
    build: chronograf
    networks: 
      - ml_net
    ports:
      - 8888:8888
    volumes:
      - chronograf:/var/lib/chronograf
    depends_on:
      - influxdb
      
  grafana:
    build: grafana
    networks: 
      - ml_net
    ports:
      - 3000:3000
    volumes:
      - grafana:/var/lib/grafana
    environment:
      - GF_DASHBOARDS_MIN_REFRESH_INTERVAL=1s
      - GF_SMTP_ENABLED=true
      - GF_SMTP_SKIP_VERIFY=true
      - GF_SMTP_HOST=${GF_SMTP_HOST}
      - GF_SMTP_USER=${GF_SMTP_USER}
      - GF_SMTP_PASSWORD=${GF_SMTP_PASSWORD}
      - GF_SMTP_FROM_ADDRESS=${GF_SMTP_FROM_ADDRESS}
      - GF_SMTP_FROM_NAME=${GF_SMTP_FROM_NAME}
    depends_on:
      - influxdb

  preprocessor:
    build: preprocessor
    networks:
      - ml_net
    volumes:
      - ./preprocessor/app:/home/appuser/app # dev-opt
    depends_on:
      - influxdb
  
  modelserver:
    build:
      dockerfile: modelserver/Dockerfile # dev-opt
      context: ./
    networks:
      - ml_net
    volumes:
      - ./modelserver/app:/home/appuser/app # dev-opt
    depends_on:
      - influxdb